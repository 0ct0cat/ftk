# Makefile.in generated by automake 1.12.2 from Makefile.am.
# opengles/src/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2012 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.




am__make_dryrun = \
  { \
    am__dry=no; \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        echo 'am--echo: ; @echo "AM"  OK' | $(MAKE) -f - 2>/dev/null \
          | grep '^AM OK$$' >/dev/null || am__dry=yes;; \
      *) \
        for am__flg in $$MAKEFLAGS; do \
          case $$am__flg in \
            *=*|--*) ;; \
            *n*) am__dry=yes; break;; \
          esac; \
        done;; \
    esac; \
    test $$am__dry = yes; \
  }
pkgdatadir = $(datadir)/ftk
pkgincludedir = $(includedir)/ftk
pkglibdir = $(libdir)/ftk
pkglibexecdir = $(libexecdir)/ftk
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-unknown-linux-gnu
host_triplet = x86_64-unknown-linux-gnu
subdir = opengles/src
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in \
	$(top_srcdir)/depcomp
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.in
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config_ftk.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__installdirs = "$(DESTDIR)$(libdir)"
LTLIBRARIES = $(lib_LTLIBRARIES)
libopengles_la_LIBADD =
am_libopengles_la_OBJECTS = Config.lo Context.lo ContextBuffer.lo \
	ContextFloat.lo ContextLight.lo ContextLines.lo \
	ContextMaterial.lo ContextMatrix.lo ContextMesh.lo \
	ContextPoints.lo ContextRaster.lo ContextRender.lo \
	ContextTexture.lo ContextTriangles.lo ContextViewport.lo \
	Display.lo Light.lo Material.lo MatrixStack.lo Rasterizer.lo \
	RasterizerState.lo RasterizerTriangles.lo Texture.lo Utils.lo \
	fixed.lo gl.lo linalg.lo CodeGenerator.lo FunctionCache.lo \
	GenFragment.lo GenLline.lo GenPoint.lo GenScanline.lo \
	GenTriangle.lo arm-codegen.lo arm-dis.lo bitset.lo emit.lo \
	heap.lo instruction.lo segment.lo ContextLinux.lo Surface.lo \
	egl.lo stdafx.lo ug_ftk.lo uglu.lo ugshape.lo
libopengles_la_OBJECTS = $(am_libopengles_la_OBJECTS)
libopengles_la_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(libopengles_la_LDFLAGS) $(LDFLAGS) -o $@
DEFAULT_INCLUDES = -I. -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
SOURCES = $(libopengles_la_SOURCES)
DIST_SOURCES = $(libopengles_la_SOURCES)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /opt/work/github/ftk/missing --run aclocal-1.12
AMTAR = $${TAR-tar}
AR = ar
AUTOCONF = ${SHELL} /opt/work/github/ftk/missing --run autoconf
AUTOHEADER = ${SHELL} /opt/work/github/ftk/missing --run autoheader
AUTOMAKE = ${SHELL} /opt/work/github/ftk/missing --run automake-1.12
AWK = gawk
CAIRO_CFLAGS = 
CAIRO_LIBS = 
CANVAS_CFLAGS = 
CANVAS_LDFLAGS = 
CATALOGS =  zh_CN.gmo
CATOBJEXT = .gmo
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2 -I/usr/include/libpng15   -DHAVE_CONFIG_FTK_H -DHAVE_CONFIG_FTK_H -I/usr/X11R6/include -DUSE_LINUX_X11 -DDISPLAY_PARAM="\"linux-x11:320x480\"" -DUSE_DEFAULT_FONT  -DUSE_GPINYIN -DUSE_LINEBREAK  -DUSE_VNC
CPP = gcc -E
CPPFLAGS = 
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2
CYGPATH_W = echo
DATADIRNAME = share
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DIRECTFB_CFLAGS = 
DIRECTFB_LIBS = 
DLLTOOL = false
DSYMUTIL = 
DUMPBIN = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /usr/bin/grep -E
EXEEXT = 
FGREP = /usr/bin/grep -F
FREETYPE_CFLAGS = 
FREETYPE_LIBS = 
GETTEXT_PACKAGE = ftk
GMOFILES =  zh_CN.gmo
GMSGFMT = /usr/bin/msgfmt
GREP = /usr/bin/grep
GTKDOC_CHECK = /usr/bin/gtkdoc-check
GTKDOC_DEPS_CFLAGS = 
GTKDOC_DEPS_LIBS = 
GTKDOC_MKPDF = /usr/bin/gtkdoc-mkpdf
GTKDOC_REBASE = /usr/bin/gtkdoc-rebase
HTML_DIR = ${datadir}/gtk-doc/html
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
INSTOBJEXT = .mo
INTLLIBS = 
LD = /usr/bin/ld -m elf_x86_64
LDFLAGS =  -lpng15   -L/usr/X11R6/lib -lX11 -lXext
LIBOBJS = 
LIBS = -ljpeg 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIPO = 
LN_S = ln -s
LTLIBOBJS = 
MAKEINFO = ${SHELL} /opt/work/github/ftk/missing --run makeinfo
MANIFEST_TOOL = :
MKDIR_P = /usr/bin/mkdir -p
MKINSTALLDIRS = ./mkinstalldirs
MSGFMT = /usr/bin/msgfmt
MSGFMT_OPTS = -c
NM = /usr/bin/nm -B
NMEDIT = 
OBJDUMP = objdump
OBJEXT = o
OTOOL = 
OTOOL64 = 
PACKAGE = ftk
PACKAGE_BUGREPORT = xianjimli@hotmail.com
PACKAGE_NAME = ftk
PACKAGE_STRING = ftk 1.0
PACKAGE_TARNAME = ftk
PACKAGE_URL = 
PACKAGE_VERSION = 1.0
PATH_SEPARATOR = :
PIXMAN_CFLAGS = 
PIXMAN_LIBS = 
PKG_CONFIG = /usr/bin/pkg-config
PKG_CONFIG_LIBDIR = 
PKG_CONFIG_PATH = 
PNG_CFLAGS = -I/usr/include/libpng15  
PNG_LIBS = -lpng15  
POFILES =  zh_CN.po
POSUB = po
PO_IN_DATADIR_FALSE = 
PO_IN_DATADIR_TRUE = 
RANLIB = ranlib
SED = /usr/bin/sed
SET_MAKE = 
SHELL = /bin/sh
STRIP = strip
TSLIB_CFLAGS = 
TSLIB_LIBS = 
USE_NLS = yes
VERSION = 1.0
XGETTEXT = /usr/bin/xgettext
abs_builddir = /opt/work/github/ftk/opengles/src
abs_srcdir = /opt/work/github/ftk/opengles/src
abs_top_builddir = /opt/work/github/ftk
abs_top_srcdir = /opt/work/github/ftk
ac_ct_AR = ar
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_DUMPBIN = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = $${TAR-tar} chof - "$$tardir"
am__untar = $${TAR-tar} xf -
bindir = ${exec_prefix}/bin
build = x86_64-unknown-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = unknown
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = x86_64-unknown-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = unknown
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /opt/work/github/ftk/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = $(MKDIR_P)
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../../
top_builddir = ../..
top_srcdir = ../..
INCLUDES = -I$(abs_top_srcdir)/opengles/include -I$(abs_top_srcdir)/opengles/src -I$(abs_top_srcdir)/opengles/src/linux-ftk \
	-I$(abs_top_srcdir)/opengles/src/arm -I$(abs_top_srcdir)/opengles/src/codegen \
	-I$(abs_top_srcdir)/src -I$(abs_top_srcdir)/src/im  -I$(abs_top_srcdir)/src/os/linux -I$(abs_top_srcdir)/ \
	-DUSE_FTK

lib_LTLIBRARIES = libopengles.la
libopengles_la_LDFLAGS = -lpthread
libopengles_la_SOURCES = \
        $(srcdir)/Arrays.h \
        $(srcdir)/Buffer.h \
        $(srcdir)/Color.h \
        $(srcdir)/Config.cpp \
        $(srcdir)/Config.h \
        $(srcdir)/Context.cpp \
        $(srcdir)/Context.h \
        $(srcdir)/ContextBuffer.cpp \
        $(srcdir)/ContextFloat.cpp \
        $(srcdir)/ContextLight.cpp \
        $(srcdir)/ContextLines.cpp \
        $(srcdir)/ContextMaterial.cpp \
        $(srcdir)/ContextMatrix.cpp \
        $(srcdir)/ContextMesh.cpp \
        $(srcdir)/ContextPoints.cpp \
        $(srcdir)/ContextRaster.cpp \
        $(srcdir)/ContextRender.cpp \
        $(srcdir)/ContextTexture.cpp \
        $(srcdir)/ContextTriangles.cpp \
        $(srcdir)/ContextViewport.cpp \
        $(srcdir)/Display.cpp \
        $(srcdir)/Display.h \
        $(srcdir)/FractionalColor.h \
        $(srcdir)/Light.cpp \
        $(srcdir)/Light.h \
        $(srcdir)/LineClipper.inc \
        $(srcdir)/Material.cpp \
        $(srcdir)/Material.h \
        $(srcdir)/MatrixStack.cpp \
        $(srcdir)/MatrixStack.h \
        $(srcdir)/OGLES.h \
        $(srcdir)/Rasterizer.cpp \
        $(srcdir)/Rasterizer.h \
        $(srcdir)/RasterizerState.cpp \
        $(srcdir)/RasterizerState.h \
        $(srcdir)/RasterizerTriangles.cpp \
        $(srcdir)/RasterizerTriangles.inc \
        $(srcdir)/Texture.cpp \
        $(srcdir)/Texture.h \
        $(srcdir)/TriangleClipper.inc \
        $(srcdir)/TriangleClipperHigh.inc \
        $(srcdir)/TriangleClipperLow.inc \
        $(srcdir)/Types.h \
        $(srcdir)/Utils.cpp \
        $(srcdir)/Utils.h \
        $(srcdir)/fixed.cpp \
        $(srcdir)/fixed.h \
        $(srcdir)/gl.cpp \
        $(srcdir)/gl_sin.h \
        $(srcdir)/linalg.cpp \
        $(srcdir)/linalg.h \
        $(srcdir)/arm/CodeGenerator.cpp \
        $(srcdir)/arm/CodeGenerator.h \
        $(srcdir)/arm/FunctionCache.cpp \
        $(srcdir)/arm/FunctionCache.h \
        $(srcdir)/arm/GenFragment.cpp \
        $(srcdir)/arm/GenLline.cpp \
        $(srcdir)/arm/GenPoint.cpp \
        $(srcdir)/arm/GenScanline.cpp \
        $(srcdir)/arm/GenTriangle.cpp \
        $(srcdir)/codegen/arm-codegen.c \
        $(srcdir)/codegen/arm-codegen.h \
        $(srcdir)/codegen/arm-dis.c \
        $(srcdir)/codegen/arm-dis.h \
        $(srcdir)/codegen/arm_dpimacros.h \
        $(srcdir)/codegen/bitset.c \
        $(srcdir)/codegen/bitset.h \
        $(srcdir)/codegen/codegen.h \
        $(srcdir)/codegen/emit.c \
        $(srcdir)/codegen/emit.h \
        $(srcdir)/codegen/heap.c \
        $(srcdir)/codegen/heap.h \
        $(srcdir)/codegen/instruction.c \
        $(srcdir)/codegen/instruction.h \
        $(srcdir)/codegen/segment.c \
        $(srcdir)/codegen/segment.h \
        $(srcdir)/linux-ftk/ContextLinux.cpp \
        $(srcdir)/linux-ftk/Surface.cpp \
        $(srcdir)/linux-ftk/Surface.h \
        $(srcdir)/linux-ftk/e32def.h \
        $(srcdir)/linux-ftk/egl.cpp \
        $(srcdir)/linux-ftk/stdafx.cpp \
        $(srcdir)/linux-ftk/stdafx.h \
        $(srcdir)/../ug/ug_ftk.c  \
        $(srcdir)/../ug/uglu.c \
        $(srcdir)/../ug/ugshape.c \
        $(srcdir)/../ug/gl_sin.h

all: all-am

.SUFFIXES:
.SUFFIXES: .c .cpp .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu opengles/src/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu opengles/src/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(MKDIR_P) '$(DESTDIR)$(libdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(libdir)" || exit 1; \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 '$(DESTDIR)$(libdir)'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 "$(DESTDIR)$(libdir)"; \
	}

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	for p in $$list; do \
	  $(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(libdir)/$$f'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(libdir)/$$f"; \
	done

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)
	@list='$(lib_LTLIBRARIES)'; \
	locs=`for p in $$list; do echo $$p; done | \
	      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \
	      sort -u`; \
	test -z "$$locs" || { \
	  echo rm -f $${locs}; \
	  rm -f $${locs}; \
	}
libopengles.la: $(libopengles_la_OBJECTS) $(libopengles_la_DEPENDENCIES) $(EXTRA_libopengles_la_DEPENDENCIES) 
	$(libopengles_la_LINK) -rpath $(libdir) $(libopengles_la_OBJECTS) $(libopengles_la_LIBADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/CodeGenerator.Plo
include ./$(DEPDIR)/Config.Plo
include ./$(DEPDIR)/Context.Plo
include ./$(DEPDIR)/ContextBuffer.Plo
include ./$(DEPDIR)/ContextFloat.Plo
include ./$(DEPDIR)/ContextLight.Plo
include ./$(DEPDIR)/ContextLines.Plo
include ./$(DEPDIR)/ContextLinux.Plo
include ./$(DEPDIR)/ContextMaterial.Plo
include ./$(DEPDIR)/ContextMatrix.Plo
include ./$(DEPDIR)/ContextMesh.Plo
include ./$(DEPDIR)/ContextPoints.Plo
include ./$(DEPDIR)/ContextRaster.Plo
include ./$(DEPDIR)/ContextRender.Plo
include ./$(DEPDIR)/ContextTexture.Plo
include ./$(DEPDIR)/ContextTriangles.Plo
include ./$(DEPDIR)/ContextViewport.Plo
include ./$(DEPDIR)/Display.Plo
include ./$(DEPDIR)/FunctionCache.Plo
include ./$(DEPDIR)/GenFragment.Plo
include ./$(DEPDIR)/GenLline.Plo
include ./$(DEPDIR)/GenPoint.Plo
include ./$(DEPDIR)/GenScanline.Plo
include ./$(DEPDIR)/GenTriangle.Plo
include ./$(DEPDIR)/Light.Plo
include ./$(DEPDIR)/Material.Plo
include ./$(DEPDIR)/MatrixStack.Plo
include ./$(DEPDIR)/Rasterizer.Plo
include ./$(DEPDIR)/RasterizerState.Plo
include ./$(DEPDIR)/RasterizerTriangles.Plo
include ./$(DEPDIR)/Surface.Plo
include ./$(DEPDIR)/Texture.Plo
include ./$(DEPDIR)/Utils.Plo
include ./$(DEPDIR)/arm-codegen.Plo
include ./$(DEPDIR)/arm-dis.Plo
include ./$(DEPDIR)/bitset.Plo
include ./$(DEPDIR)/egl.Plo
include ./$(DEPDIR)/emit.Plo
include ./$(DEPDIR)/fixed.Plo
include ./$(DEPDIR)/gl.Plo
include ./$(DEPDIR)/heap.Plo
include ./$(DEPDIR)/instruction.Plo
include ./$(DEPDIR)/linalg.Plo
include ./$(DEPDIR)/segment.Plo
include ./$(DEPDIR)/stdafx.Plo
include ./$(DEPDIR)/ug_ftk.Plo
include ./$(DEPDIR)/uglu.Plo
include ./$(DEPDIR)/ugshape.Plo

.c.o:
	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c $<

.c.obj:
	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c `$(CYGPATH_W) '$<'`

.c.lo:
	$(LTCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LTCOMPILE) -c -o $@ $<

arm-codegen.lo: $(srcdir)/codegen/arm-codegen.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT arm-codegen.lo -MD -MP -MF $(DEPDIR)/arm-codegen.Tpo -c -o arm-codegen.lo `test -f '$(srcdir)/codegen/arm-codegen.c' || echo '$(srcdir)/'`$(srcdir)/codegen/arm-codegen.c
	$(am__mv) $(DEPDIR)/arm-codegen.Tpo $(DEPDIR)/arm-codegen.Plo
#	source='$(srcdir)/codegen/arm-codegen.c' object='arm-codegen.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o arm-codegen.lo `test -f '$(srcdir)/codegen/arm-codegen.c' || echo '$(srcdir)/'`$(srcdir)/codegen/arm-codegen.c

arm-dis.lo: $(srcdir)/codegen/arm-dis.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT arm-dis.lo -MD -MP -MF $(DEPDIR)/arm-dis.Tpo -c -o arm-dis.lo `test -f '$(srcdir)/codegen/arm-dis.c' || echo '$(srcdir)/'`$(srcdir)/codegen/arm-dis.c
	$(am__mv) $(DEPDIR)/arm-dis.Tpo $(DEPDIR)/arm-dis.Plo
#	source='$(srcdir)/codegen/arm-dis.c' object='arm-dis.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o arm-dis.lo `test -f '$(srcdir)/codegen/arm-dis.c' || echo '$(srcdir)/'`$(srcdir)/codegen/arm-dis.c

bitset.lo: $(srcdir)/codegen/bitset.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT bitset.lo -MD -MP -MF $(DEPDIR)/bitset.Tpo -c -o bitset.lo `test -f '$(srcdir)/codegen/bitset.c' || echo '$(srcdir)/'`$(srcdir)/codegen/bitset.c
	$(am__mv) $(DEPDIR)/bitset.Tpo $(DEPDIR)/bitset.Plo
#	source='$(srcdir)/codegen/bitset.c' object='bitset.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o bitset.lo `test -f '$(srcdir)/codegen/bitset.c' || echo '$(srcdir)/'`$(srcdir)/codegen/bitset.c

emit.lo: $(srcdir)/codegen/emit.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT emit.lo -MD -MP -MF $(DEPDIR)/emit.Tpo -c -o emit.lo `test -f '$(srcdir)/codegen/emit.c' || echo '$(srcdir)/'`$(srcdir)/codegen/emit.c
	$(am__mv) $(DEPDIR)/emit.Tpo $(DEPDIR)/emit.Plo
#	source='$(srcdir)/codegen/emit.c' object='emit.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o emit.lo `test -f '$(srcdir)/codegen/emit.c' || echo '$(srcdir)/'`$(srcdir)/codegen/emit.c

heap.lo: $(srcdir)/codegen/heap.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT heap.lo -MD -MP -MF $(DEPDIR)/heap.Tpo -c -o heap.lo `test -f '$(srcdir)/codegen/heap.c' || echo '$(srcdir)/'`$(srcdir)/codegen/heap.c
	$(am__mv) $(DEPDIR)/heap.Tpo $(DEPDIR)/heap.Plo
#	source='$(srcdir)/codegen/heap.c' object='heap.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o heap.lo `test -f '$(srcdir)/codegen/heap.c' || echo '$(srcdir)/'`$(srcdir)/codegen/heap.c

instruction.lo: $(srcdir)/codegen/instruction.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT instruction.lo -MD -MP -MF $(DEPDIR)/instruction.Tpo -c -o instruction.lo `test -f '$(srcdir)/codegen/instruction.c' || echo '$(srcdir)/'`$(srcdir)/codegen/instruction.c
	$(am__mv) $(DEPDIR)/instruction.Tpo $(DEPDIR)/instruction.Plo
#	source='$(srcdir)/codegen/instruction.c' object='instruction.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o instruction.lo `test -f '$(srcdir)/codegen/instruction.c' || echo '$(srcdir)/'`$(srcdir)/codegen/instruction.c

segment.lo: $(srcdir)/codegen/segment.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT segment.lo -MD -MP -MF $(DEPDIR)/segment.Tpo -c -o segment.lo `test -f '$(srcdir)/codegen/segment.c' || echo '$(srcdir)/'`$(srcdir)/codegen/segment.c
	$(am__mv) $(DEPDIR)/segment.Tpo $(DEPDIR)/segment.Plo
#	source='$(srcdir)/codegen/segment.c' object='segment.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o segment.lo `test -f '$(srcdir)/codegen/segment.c' || echo '$(srcdir)/'`$(srcdir)/codegen/segment.c

ug_ftk.lo: $(srcdir)/../ug/ug_ftk.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ug_ftk.lo -MD -MP -MF $(DEPDIR)/ug_ftk.Tpo -c -o ug_ftk.lo `test -f '$(srcdir)/../ug/ug_ftk.c' || echo '$(srcdir)/'`$(srcdir)/../ug/ug_ftk.c
	$(am__mv) $(DEPDIR)/ug_ftk.Tpo $(DEPDIR)/ug_ftk.Plo
#	source='$(srcdir)/../ug/ug_ftk.c' object='ug_ftk.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ug_ftk.lo `test -f '$(srcdir)/../ug/ug_ftk.c' || echo '$(srcdir)/'`$(srcdir)/../ug/ug_ftk.c

uglu.lo: $(srcdir)/../ug/uglu.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT uglu.lo -MD -MP -MF $(DEPDIR)/uglu.Tpo -c -o uglu.lo `test -f '$(srcdir)/../ug/uglu.c' || echo '$(srcdir)/'`$(srcdir)/../ug/uglu.c
	$(am__mv) $(DEPDIR)/uglu.Tpo $(DEPDIR)/uglu.Plo
#	source='$(srcdir)/../ug/uglu.c' object='uglu.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o uglu.lo `test -f '$(srcdir)/../ug/uglu.c' || echo '$(srcdir)/'`$(srcdir)/../ug/uglu.c

ugshape.lo: $(srcdir)/../ug/ugshape.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ugshape.lo -MD -MP -MF $(DEPDIR)/ugshape.Tpo -c -o ugshape.lo `test -f '$(srcdir)/../ug/ugshape.c' || echo '$(srcdir)/'`$(srcdir)/../ug/ugshape.c
	$(am__mv) $(DEPDIR)/ugshape.Tpo $(DEPDIR)/ugshape.Plo
#	source='$(srcdir)/../ug/ugshape.c' object='ugshape.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ugshape.lo `test -f '$(srcdir)/../ug/ugshape.c' || echo '$(srcdir)/'`$(srcdir)/../ug/ugshape.c

.cpp.o:
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LTCXXCOMPILE) -c -o $@ $<

Config.lo: $(srcdir)/Config.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Config.lo -MD -MP -MF $(DEPDIR)/Config.Tpo -c -o Config.lo `test -f '$(srcdir)/Config.cpp' || echo '$(srcdir)/'`$(srcdir)/Config.cpp
	$(am__mv) $(DEPDIR)/Config.Tpo $(DEPDIR)/Config.Plo
#	source='$(srcdir)/Config.cpp' object='Config.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Config.lo `test -f '$(srcdir)/Config.cpp' || echo '$(srcdir)/'`$(srcdir)/Config.cpp

Context.lo: $(srcdir)/Context.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Context.lo -MD -MP -MF $(DEPDIR)/Context.Tpo -c -o Context.lo `test -f '$(srcdir)/Context.cpp' || echo '$(srcdir)/'`$(srcdir)/Context.cpp
	$(am__mv) $(DEPDIR)/Context.Tpo $(DEPDIR)/Context.Plo
#	source='$(srcdir)/Context.cpp' object='Context.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Context.lo `test -f '$(srcdir)/Context.cpp' || echo '$(srcdir)/'`$(srcdir)/Context.cpp

ContextBuffer.lo: $(srcdir)/ContextBuffer.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ContextBuffer.lo -MD -MP -MF $(DEPDIR)/ContextBuffer.Tpo -c -o ContextBuffer.lo `test -f '$(srcdir)/ContextBuffer.cpp' || echo '$(srcdir)/'`$(srcdir)/ContextBuffer.cpp
	$(am__mv) $(DEPDIR)/ContextBuffer.Tpo $(DEPDIR)/ContextBuffer.Plo
#	source='$(srcdir)/ContextBuffer.cpp' object='ContextBuffer.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ContextBuffer.lo `test -f '$(srcdir)/ContextBuffer.cpp' || echo '$(srcdir)/'`$(srcdir)/ContextBuffer.cpp

ContextFloat.lo: $(srcdir)/ContextFloat.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ContextFloat.lo -MD -MP -MF $(DEPDIR)/ContextFloat.Tpo -c -o ContextFloat.lo `test -f '$(srcdir)/ContextFloat.cpp' || echo '$(srcdir)/'`$(srcdir)/ContextFloat.cpp
	$(am__mv) $(DEPDIR)/ContextFloat.Tpo $(DEPDIR)/ContextFloat.Plo
#	source='$(srcdir)/ContextFloat.cpp' object='ContextFloat.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ContextFloat.lo `test -f '$(srcdir)/ContextFloat.cpp' || echo '$(srcdir)/'`$(srcdir)/ContextFloat.cpp

ContextLight.lo: $(srcdir)/ContextLight.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ContextLight.lo -MD -MP -MF $(DEPDIR)/ContextLight.Tpo -c -o ContextLight.lo `test -f '$(srcdir)/ContextLight.cpp' || echo '$(srcdir)/'`$(srcdir)/ContextLight.cpp
	$(am__mv) $(DEPDIR)/ContextLight.Tpo $(DEPDIR)/ContextLight.Plo
#	source='$(srcdir)/ContextLight.cpp' object='ContextLight.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ContextLight.lo `test -f '$(srcdir)/ContextLight.cpp' || echo '$(srcdir)/'`$(srcdir)/ContextLight.cpp

ContextLines.lo: $(srcdir)/ContextLines.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ContextLines.lo -MD -MP -MF $(DEPDIR)/ContextLines.Tpo -c -o ContextLines.lo `test -f '$(srcdir)/ContextLines.cpp' || echo '$(srcdir)/'`$(srcdir)/ContextLines.cpp
	$(am__mv) $(DEPDIR)/ContextLines.Tpo $(DEPDIR)/ContextLines.Plo
#	source='$(srcdir)/ContextLines.cpp' object='ContextLines.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ContextLines.lo `test -f '$(srcdir)/ContextLines.cpp' || echo '$(srcdir)/'`$(srcdir)/ContextLines.cpp

ContextMaterial.lo: $(srcdir)/ContextMaterial.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ContextMaterial.lo -MD -MP -MF $(DEPDIR)/ContextMaterial.Tpo -c -o ContextMaterial.lo `test -f '$(srcdir)/ContextMaterial.cpp' || echo '$(srcdir)/'`$(srcdir)/ContextMaterial.cpp
	$(am__mv) $(DEPDIR)/ContextMaterial.Tpo $(DEPDIR)/ContextMaterial.Plo
#	source='$(srcdir)/ContextMaterial.cpp' object='ContextMaterial.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ContextMaterial.lo `test -f '$(srcdir)/ContextMaterial.cpp' || echo '$(srcdir)/'`$(srcdir)/ContextMaterial.cpp

ContextMatrix.lo: $(srcdir)/ContextMatrix.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ContextMatrix.lo -MD -MP -MF $(DEPDIR)/ContextMatrix.Tpo -c -o ContextMatrix.lo `test -f '$(srcdir)/ContextMatrix.cpp' || echo '$(srcdir)/'`$(srcdir)/ContextMatrix.cpp
	$(am__mv) $(DEPDIR)/ContextMatrix.Tpo $(DEPDIR)/ContextMatrix.Plo
#	source='$(srcdir)/ContextMatrix.cpp' object='ContextMatrix.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ContextMatrix.lo `test -f '$(srcdir)/ContextMatrix.cpp' || echo '$(srcdir)/'`$(srcdir)/ContextMatrix.cpp

ContextMesh.lo: $(srcdir)/ContextMesh.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ContextMesh.lo -MD -MP -MF $(DEPDIR)/ContextMesh.Tpo -c -o ContextMesh.lo `test -f '$(srcdir)/ContextMesh.cpp' || echo '$(srcdir)/'`$(srcdir)/ContextMesh.cpp
	$(am__mv) $(DEPDIR)/ContextMesh.Tpo $(DEPDIR)/ContextMesh.Plo
#	source='$(srcdir)/ContextMesh.cpp' object='ContextMesh.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ContextMesh.lo `test -f '$(srcdir)/ContextMesh.cpp' || echo '$(srcdir)/'`$(srcdir)/ContextMesh.cpp

ContextPoints.lo: $(srcdir)/ContextPoints.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ContextPoints.lo -MD -MP -MF $(DEPDIR)/ContextPoints.Tpo -c -o ContextPoints.lo `test -f '$(srcdir)/ContextPoints.cpp' || echo '$(srcdir)/'`$(srcdir)/ContextPoints.cpp
	$(am__mv) $(DEPDIR)/ContextPoints.Tpo $(DEPDIR)/ContextPoints.Plo
#	source='$(srcdir)/ContextPoints.cpp' object='ContextPoints.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ContextPoints.lo `test -f '$(srcdir)/ContextPoints.cpp' || echo '$(srcdir)/'`$(srcdir)/ContextPoints.cpp

ContextRaster.lo: $(srcdir)/ContextRaster.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ContextRaster.lo -MD -MP -MF $(DEPDIR)/ContextRaster.Tpo -c -o ContextRaster.lo `test -f '$(srcdir)/ContextRaster.cpp' || echo '$(srcdir)/'`$(srcdir)/ContextRaster.cpp
	$(am__mv) $(DEPDIR)/ContextRaster.Tpo $(DEPDIR)/ContextRaster.Plo
#	source='$(srcdir)/ContextRaster.cpp' object='ContextRaster.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ContextRaster.lo `test -f '$(srcdir)/ContextRaster.cpp' || echo '$(srcdir)/'`$(srcdir)/ContextRaster.cpp

ContextRender.lo: $(srcdir)/ContextRender.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ContextRender.lo -MD -MP -MF $(DEPDIR)/ContextRender.Tpo -c -o ContextRender.lo `test -f '$(srcdir)/ContextRender.cpp' || echo '$(srcdir)/'`$(srcdir)/ContextRender.cpp
	$(am__mv) $(DEPDIR)/ContextRender.Tpo $(DEPDIR)/ContextRender.Plo
#	source='$(srcdir)/ContextRender.cpp' object='ContextRender.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ContextRender.lo `test -f '$(srcdir)/ContextRender.cpp' || echo '$(srcdir)/'`$(srcdir)/ContextRender.cpp

ContextTexture.lo: $(srcdir)/ContextTexture.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ContextTexture.lo -MD -MP -MF $(DEPDIR)/ContextTexture.Tpo -c -o ContextTexture.lo `test -f '$(srcdir)/ContextTexture.cpp' || echo '$(srcdir)/'`$(srcdir)/ContextTexture.cpp
	$(am__mv) $(DEPDIR)/ContextTexture.Tpo $(DEPDIR)/ContextTexture.Plo
#	source='$(srcdir)/ContextTexture.cpp' object='ContextTexture.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ContextTexture.lo `test -f '$(srcdir)/ContextTexture.cpp' || echo '$(srcdir)/'`$(srcdir)/ContextTexture.cpp

ContextTriangles.lo: $(srcdir)/ContextTriangles.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ContextTriangles.lo -MD -MP -MF $(DEPDIR)/ContextTriangles.Tpo -c -o ContextTriangles.lo `test -f '$(srcdir)/ContextTriangles.cpp' || echo '$(srcdir)/'`$(srcdir)/ContextTriangles.cpp
	$(am__mv) $(DEPDIR)/ContextTriangles.Tpo $(DEPDIR)/ContextTriangles.Plo
#	source='$(srcdir)/ContextTriangles.cpp' object='ContextTriangles.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ContextTriangles.lo `test -f '$(srcdir)/ContextTriangles.cpp' || echo '$(srcdir)/'`$(srcdir)/ContextTriangles.cpp

ContextViewport.lo: $(srcdir)/ContextViewport.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ContextViewport.lo -MD -MP -MF $(DEPDIR)/ContextViewport.Tpo -c -o ContextViewport.lo `test -f '$(srcdir)/ContextViewport.cpp' || echo '$(srcdir)/'`$(srcdir)/ContextViewport.cpp
	$(am__mv) $(DEPDIR)/ContextViewport.Tpo $(DEPDIR)/ContextViewport.Plo
#	source='$(srcdir)/ContextViewport.cpp' object='ContextViewport.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ContextViewport.lo `test -f '$(srcdir)/ContextViewport.cpp' || echo '$(srcdir)/'`$(srcdir)/ContextViewport.cpp

Display.lo: $(srcdir)/Display.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Display.lo -MD -MP -MF $(DEPDIR)/Display.Tpo -c -o Display.lo `test -f '$(srcdir)/Display.cpp' || echo '$(srcdir)/'`$(srcdir)/Display.cpp
	$(am__mv) $(DEPDIR)/Display.Tpo $(DEPDIR)/Display.Plo
#	source='$(srcdir)/Display.cpp' object='Display.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Display.lo `test -f '$(srcdir)/Display.cpp' || echo '$(srcdir)/'`$(srcdir)/Display.cpp

Light.lo: $(srcdir)/Light.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Light.lo -MD -MP -MF $(DEPDIR)/Light.Tpo -c -o Light.lo `test -f '$(srcdir)/Light.cpp' || echo '$(srcdir)/'`$(srcdir)/Light.cpp
	$(am__mv) $(DEPDIR)/Light.Tpo $(DEPDIR)/Light.Plo
#	source='$(srcdir)/Light.cpp' object='Light.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Light.lo `test -f '$(srcdir)/Light.cpp' || echo '$(srcdir)/'`$(srcdir)/Light.cpp

Material.lo: $(srcdir)/Material.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Material.lo -MD -MP -MF $(DEPDIR)/Material.Tpo -c -o Material.lo `test -f '$(srcdir)/Material.cpp' || echo '$(srcdir)/'`$(srcdir)/Material.cpp
	$(am__mv) $(DEPDIR)/Material.Tpo $(DEPDIR)/Material.Plo
#	source='$(srcdir)/Material.cpp' object='Material.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Material.lo `test -f '$(srcdir)/Material.cpp' || echo '$(srcdir)/'`$(srcdir)/Material.cpp

MatrixStack.lo: $(srcdir)/MatrixStack.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT MatrixStack.lo -MD -MP -MF $(DEPDIR)/MatrixStack.Tpo -c -o MatrixStack.lo `test -f '$(srcdir)/MatrixStack.cpp' || echo '$(srcdir)/'`$(srcdir)/MatrixStack.cpp
	$(am__mv) $(DEPDIR)/MatrixStack.Tpo $(DEPDIR)/MatrixStack.Plo
#	source='$(srcdir)/MatrixStack.cpp' object='MatrixStack.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o MatrixStack.lo `test -f '$(srcdir)/MatrixStack.cpp' || echo '$(srcdir)/'`$(srcdir)/MatrixStack.cpp

Rasterizer.lo: $(srcdir)/Rasterizer.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Rasterizer.lo -MD -MP -MF $(DEPDIR)/Rasterizer.Tpo -c -o Rasterizer.lo `test -f '$(srcdir)/Rasterizer.cpp' || echo '$(srcdir)/'`$(srcdir)/Rasterizer.cpp
	$(am__mv) $(DEPDIR)/Rasterizer.Tpo $(DEPDIR)/Rasterizer.Plo
#	source='$(srcdir)/Rasterizer.cpp' object='Rasterizer.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Rasterizer.lo `test -f '$(srcdir)/Rasterizer.cpp' || echo '$(srcdir)/'`$(srcdir)/Rasterizer.cpp

RasterizerState.lo: $(srcdir)/RasterizerState.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT RasterizerState.lo -MD -MP -MF $(DEPDIR)/RasterizerState.Tpo -c -o RasterizerState.lo `test -f '$(srcdir)/RasterizerState.cpp' || echo '$(srcdir)/'`$(srcdir)/RasterizerState.cpp
	$(am__mv) $(DEPDIR)/RasterizerState.Tpo $(DEPDIR)/RasterizerState.Plo
#	source='$(srcdir)/RasterizerState.cpp' object='RasterizerState.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o RasterizerState.lo `test -f '$(srcdir)/RasterizerState.cpp' || echo '$(srcdir)/'`$(srcdir)/RasterizerState.cpp

RasterizerTriangles.lo: $(srcdir)/RasterizerTriangles.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT RasterizerTriangles.lo -MD -MP -MF $(DEPDIR)/RasterizerTriangles.Tpo -c -o RasterizerTriangles.lo `test -f '$(srcdir)/RasterizerTriangles.cpp' || echo '$(srcdir)/'`$(srcdir)/RasterizerTriangles.cpp
	$(am__mv) $(DEPDIR)/RasterizerTriangles.Tpo $(DEPDIR)/RasterizerTriangles.Plo
#	source='$(srcdir)/RasterizerTriangles.cpp' object='RasterizerTriangles.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o RasterizerTriangles.lo `test -f '$(srcdir)/RasterizerTriangles.cpp' || echo '$(srcdir)/'`$(srcdir)/RasterizerTriangles.cpp

Texture.lo: $(srcdir)/Texture.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Texture.lo -MD -MP -MF $(DEPDIR)/Texture.Tpo -c -o Texture.lo `test -f '$(srcdir)/Texture.cpp' || echo '$(srcdir)/'`$(srcdir)/Texture.cpp
	$(am__mv) $(DEPDIR)/Texture.Tpo $(DEPDIR)/Texture.Plo
#	source='$(srcdir)/Texture.cpp' object='Texture.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Texture.lo `test -f '$(srcdir)/Texture.cpp' || echo '$(srcdir)/'`$(srcdir)/Texture.cpp

Utils.lo: $(srcdir)/Utils.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Utils.lo -MD -MP -MF $(DEPDIR)/Utils.Tpo -c -o Utils.lo `test -f '$(srcdir)/Utils.cpp' || echo '$(srcdir)/'`$(srcdir)/Utils.cpp
	$(am__mv) $(DEPDIR)/Utils.Tpo $(DEPDIR)/Utils.Plo
#	source='$(srcdir)/Utils.cpp' object='Utils.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Utils.lo `test -f '$(srcdir)/Utils.cpp' || echo '$(srcdir)/'`$(srcdir)/Utils.cpp

fixed.lo: $(srcdir)/fixed.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fixed.lo -MD -MP -MF $(DEPDIR)/fixed.Tpo -c -o fixed.lo `test -f '$(srcdir)/fixed.cpp' || echo '$(srcdir)/'`$(srcdir)/fixed.cpp
	$(am__mv) $(DEPDIR)/fixed.Tpo $(DEPDIR)/fixed.Plo
#	source='$(srcdir)/fixed.cpp' object='fixed.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fixed.lo `test -f '$(srcdir)/fixed.cpp' || echo '$(srcdir)/'`$(srcdir)/fixed.cpp

gl.lo: $(srcdir)/gl.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT gl.lo -MD -MP -MF $(DEPDIR)/gl.Tpo -c -o gl.lo `test -f '$(srcdir)/gl.cpp' || echo '$(srcdir)/'`$(srcdir)/gl.cpp
	$(am__mv) $(DEPDIR)/gl.Tpo $(DEPDIR)/gl.Plo
#	source='$(srcdir)/gl.cpp' object='gl.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o gl.lo `test -f '$(srcdir)/gl.cpp' || echo '$(srcdir)/'`$(srcdir)/gl.cpp

linalg.lo: $(srcdir)/linalg.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT linalg.lo -MD -MP -MF $(DEPDIR)/linalg.Tpo -c -o linalg.lo `test -f '$(srcdir)/linalg.cpp' || echo '$(srcdir)/'`$(srcdir)/linalg.cpp
	$(am__mv) $(DEPDIR)/linalg.Tpo $(DEPDIR)/linalg.Plo
#	source='$(srcdir)/linalg.cpp' object='linalg.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o linalg.lo `test -f '$(srcdir)/linalg.cpp' || echo '$(srcdir)/'`$(srcdir)/linalg.cpp

CodeGenerator.lo: $(srcdir)/arm/CodeGenerator.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT CodeGenerator.lo -MD -MP -MF $(DEPDIR)/CodeGenerator.Tpo -c -o CodeGenerator.lo `test -f '$(srcdir)/arm/CodeGenerator.cpp' || echo '$(srcdir)/'`$(srcdir)/arm/CodeGenerator.cpp
	$(am__mv) $(DEPDIR)/CodeGenerator.Tpo $(DEPDIR)/CodeGenerator.Plo
#	source='$(srcdir)/arm/CodeGenerator.cpp' object='CodeGenerator.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o CodeGenerator.lo `test -f '$(srcdir)/arm/CodeGenerator.cpp' || echo '$(srcdir)/'`$(srcdir)/arm/CodeGenerator.cpp

FunctionCache.lo: $(srcdir)/arm/FunctionCache.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT FunctionCache.lo -MD -MP -MF $(DEPDIR)/FunctionCache.Tpo -c -o FunctionCache.lo `test -f '$(srcdir)/arm/FunctionCache.cpp' || echo '$(srcdir)/'`$(srcdir)/arm/FunctionCache.cpp
	$(am__mv) $(DEPDIR)/FunctionCache.Tpo $(DEPDIR)/FunctionCache.Plo
#	source='$(srcdir)/arm/FunctionCache.cpp' object='FunctionCache.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o FunctionCache.lo `test -f '$(srcdir)/arm/FunctionCache.cpp' || echo '$(srcdir)/'`$(srcdir)/arm/FunctionCache.cpp

GenFragment.lo: $(srcdir)/arm/GenFragment.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT GenFragment.lo -MD -MP -MF $(DEPDIR)/GenFragment.Tpo -c -o GenFragment.lo `test -f '$(srcdir)/arm/GenFragment.cpp' || echo '$(srcdir)/'`$(srcdir)/arm/GenFragment.cpp
	$(am__mv) $(DEPDIR)/GenFragment.Tpo $(DEPDIR)/GenFragment.Plo
#	source='$(srcdir)/arm/GenFragment.cpp' object='GenFragment.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o GenFragment.lo `test -f '$(srcdir)/arm/GenFragment.cpp' || echo '$(srcdir)/'`$(srcdir)/arm/GenFragment.cpp

GenLline.lo: $(srcdir)/arm/GenLline.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT GenLline.lo -MD -MP -MF $(DEPDIR)/GenLline.Tpo -c -o GenLline.lo `test -f '$(srcdir)/arm/GenLline.cpp' || echo '$(srcdir)/'`$(srcdir)/arm/GenLline.cpp
	$(am__mv) $(DEPDIR)/GenLline.Tpo $(DEPDIR)/GenLline.Plo
#	source='$(srcdir)/arm/GenLline.cpp' object='GenLline.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o GenLline.lo `test -f '$(srcdir)/arm/GenLline.cpp' || echo '$(srcdir)/'`$(srcdir)/arm/GenLline.cpp

GenPoint.lo: $(srcdir)/arm/GenPoint.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT GenPoint.lo -MD -MP -MF $(DEPDIR)/GenPoint.Tpo -c -o GenPoint.lo `test -f '$(srcdir)/arm/GenPoint.cpp' || echo '$(srcdir)/'`$(srcdir)/arm/GenPoint.cpp
	$(am__mv) $(DEPDIR)/GenPoint.Tpo $(DEPDIR)/GenPoint.Plo
#	source='$(srcdir)/arm/GenPoint.cpp' object='GenPoint.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o GenPoint.lo `test -f '$(srcdir)/arm/GenPoint.cpp' || echo '$(srcdir)/'`$(srcdir)/arm/GenPoint.cpp

GenScanline.lo: $(srcdir)/arm/GenScanline.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT GenScanline.lo -MD -MP -MF $(DEPDIR)/GenScanline.Tpo -c -o GenScanline.lo `test -f '$(srcdir)/arm/GenScanline.cpp' || echo '$(srcdir)/'`$(srcdir)/arm/GenScanline.cpp
	$(am__mv) $(DEPDIR)/GenScanline.Tpo $(DEPDIR)/GenScanline.Plo
#	source='$(srcdir)/arm/GenScanline.cpp' object='GenScanline.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o GenScanline.lo `test -f '$(srcdir)/arm/GenScanline.cpp' || echo '$(srcdir)/'`$(srcdir)/arm/GenScanline.cpp

GenTriangle.lo: $(srcdir)/arm/GenTriangle.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT GenTriangle.lo -MD -MP -MF $(DEPDIR)/GenTriangle.Tpo -c -o GenTriangle.lo `test -f '$(srcdir)/arm/GenTriangle.cpp' || echo '$(srcdir)/'`$(srcdir)/arm/GenTriangle.cpp
	$(am__mv) $(DEPDIR)/GenTriangle.Tpo $(DEPDIR)/GenTriangle.Plo
#	source='$(srcdir)/arm/GenTriangle.cpp' object='GenTriangle.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o GenTriangle.lo `test -f '$(srcdir)/arm/GenTriangle.cpp' || echo '$(srcdir)/'`$(srcdir)/arm/GenTriangle.cpp

ContextLinux.lo: $(srcdir)/linux-ftk/ContextLinux.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ContextLinux.lo -MD -MP -MF $(DEPDIR)/ContextLinux.Tpo -c -o ContextLinux.lo `test -f '$(srcdir)/linux-ftk/ContextLinux.cpp' || echo '$(srcdir)/'`$(srcdir)/linux-ftk/ContextLinux.cpp
	$(am__mv) $(DEPDIR)/ContextLinux.Tpo $(DEPDIR)/ContextLinux.Plo
#	source='$(srcdir)/linux-ftk/ContextLinux.cpp' object='ContextLinux.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ContextLinux.lo `test -f '$(srcdir)/linux-ftk/ContextLinux.cpp' || echo '$(srcdir)/'`$(srcdir)/linux-ftk/ContextLinux.cpp

Surface.lo: $(srcdir)/linux-ftk/Surface.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Surface.lo -MD -MP -MF $(DEPDIR)/Surface.Tpo -c -o Surface.lo `test -f '$(srcdir)/linux-ftk/Surface.cpp' || echo '$(srcdir)/'`$(srcdir)/linux-ftk/Surface.cpp
	$(am__mv) $(DEPDIR)/Surface.Tpo $(DEPDIR)/Surface.Plo
#	source='$(srcdir)/linux-ftk/Surface.cpp' object='Surface.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Surface.lo `test -f '$(srcdir)/linux-ftk/Surface.cpp' || echo '$(srcdir)/'`$(srcdir)/linux-ftk/Surface.cpp

egl.lo: $(srcdir)/linux-ftk/egl.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT egl.lo -MD -MP -MF $(DEPDIR)/egl.Tpo -c -o egl.lo `test -f '$(srcdir)/linux-ftk/egl.cpp' || echo '$(srcdir)/'`$(srcdir)/linux-ftk/egl.cpp
	$(am__mv) $(DEPDIR)/egl.Tpo $(DEPDIR)/egl.Plo
#	source='$(srcdir)/linux-ftk/egl.cpp' object='egl.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o egl.lo `test -f '$(srcdir)/linux-ftk/egl.cpp' || echo '$(srcdir)/'`$(srcdir)/linux-ftk/egl.cpp

stdafx.lo: $(srcdir)/linux-ftk/stdafx.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT stdafx.lo -MD -MP -MF $(DEPDIR)/stdafx.Tpo -c -o stdafx.lo `test -f '$(srcdir)/linux-ftk/stdafx.cpp' || echo '$(srcdir)/'`$(srcdir)/linux-ftk/stdafx.cpp
	$(am__mv) $(DEPDIR)/stdafx.Tpo $(DEPDIR)/stdafx.Plo
#	source='$(srcdir)/linux-ftk/stdafx.cpp' object='stdafx.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o stdafx.lo `test -f '$(srcdir)/linux-ftk/stdafx.cpp' || echo '$(srcdir)/'`$(srcdir)/linux-ftk/stdafx.cpp

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

cscopelist:  $(HEADERS) $(SOURCES) $(LISP)
	list='$(SOURCES) $(HEADERS) $(LISP)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LTLIBRARIES)
installdirs:
	for dir in "$(DESTDIR)$(libdir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-libLTLIBRARIES clean-libtool \
	mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-libLTLIBRARIES

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-libLTLIBRARIES

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-generic \
	clean-libLTLIBRARIES clean-libtool cscopelist ctags distclean \
	distclean-compile distclean-generic distclean-libtool \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-am install-data install-data-am install-dvi \
	install-dvi-am install-exec install-exec-am install-html \
	install-html-am install-info install-info-am \
	install-libLTLIBRARIES install-man install-pdf install-pdf-am \
	install-ps install-ps-am install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags uninstall uninstall-am uninstall-libLTLIBRARIES


# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
